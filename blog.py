import cPickle, subprocess, tempfile, markdown2, config
print("MineRobber's blog generator")
print("------------------------")
try:
	blog_posts = cPickle.load(open("posts.pickled","rb"))
except:
	blog_posts = []
print("'n' for new post, 'g' to generate, 'q' to quit.")
running = True;
while running:
	choice = raw_input("> ")
	if choice.lower() == "n":
		title = raw_input("Title: ")
		body = markdown2.markdown(raw_input("Body: "))
		blog_posts.append([title, body])
	elif choice.lower() == "g":
		rss = "<?xml version='1.0' encoding='UTF-8'?><rss version='2.0'><channel><title>"+config.title+"</title><link>"+config.url+"</link><description>"+config.desc+"</description>"
		contents = "<html><head><title>{0}</title><link rel='stylesheet' href='{1}'></head><body><h1>{0}</h1>".format(config.title,config.css_location)
		blog_posts.reverse()
		i = len(blog_posts)
		for post in blog_posts:
			contents += "<h2 id='post"+str(i)+"'>"+post[0]+"</h2><p>"+post[1]+"</p>"
			rss += "<item><title>{0}</title><link>{3}#post{1!s}</link><description>{2}</description></item>".format(post[0],i,post[1].replace("<","&lt;").replace(">","&gt;"),config.url)
			i -= 1
		blog_posts.reverse()
		contents += "<hr><p>Generated by <a href='https://github.com/MineRobber9000/blog-gen'>MineRobber's Python blog generator.</a></p></body></html>"
		rss += "</channel></rss>"
		with open(config.location,"wb") as f:
			f.write(contents);
		with open(config.rss_location,"wb") as f2:
			f2.write(rss)
	elif choice.lower() == "q":
		running = False
cPickle.dump(blog_posts,open("posts.pickled","wb"))
print("bye")
